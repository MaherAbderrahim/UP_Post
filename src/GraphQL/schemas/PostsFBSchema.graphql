scalar DateTime

type PostFB {
  id: Int!
  page: PageFB!
  created_at: DateTime!
  updated_at: DateTime!
  Name_page: String
  Followers: Int
  Heure_post: DateTime
  Descriptions: String
  Partages: Int
  Hashtags: String
  Nombre_de_commentaire: Int
  Jadores: Int
  Jaimes: Int
  Solidaires: Int
  Rires: Int
  Colere: Int
  Tristes: Int
  Wouah: Int
  Url_post: String
  Popularity: Int
  Jour_de_la_semaine: String
  Annee_post: Int
  Mois: String
  langue_post: String
  Season: String
  Nombre_Hashtags: Int
  Found_Hash: String
  Sentiment_post: String
  Longueur_caracteres_text: Int
  sentiment_comments_POS: Int
  sentiment_comments_NEG: Int
  Timeline_visibility: String
  Instagram_eligibility: String
  Can_reply_privately: Boolean
  is_sponsored: Boolean
  prediction_label: Int
  prediction_score: Float
  comments: [Comment!]!
}

input CreatePostFBInput {
  page_id: Int!
  Name_page: String
  Followers: Int
  Heure_post: DateTime
  Descriptions: String
  Partages: Int
  Hashtags: String
  Nombre_de_commentaire: Int
  Jadores: Int
  Jaimes: Int
  Solidaires: Int
  Rires: Int
  Colere: Int
  Tristes: Int
  Wouah: Int
  Url_post: String
  Popularity: Int
  Jour_de_la_semaine: String
  Annee_post: Int
  Mois: String
  langue_post: String
  Season: String
  Nombre_Hashtags: Int
  Found_Hash: String
  Sentiment_post: String
  Longueur_caracteres_text: Int
  sentiment_comments_POS: Int
  sentiment_comments_NEG: Int
  Timeline_visibility: String
  Instagram_eligibility: String
  Can_reply_privately: Boolean
  is_sponsored: Boolean
  prediction_label: Int
  prediction_score: Float
  comments: [Comment!]!
}

input UpdatePostFBInput {
  Name_page: String
  Descriptions: String
  Partages: Int
  Hashtags: String
  Nombre_de_commentaire: Int
  Jadores: Int
  Jaimes: Int
  Solidaires: Int
  Rires: Int
  Colere: Int
  Tristes: Int
  Wouah: Int
  Url_post: String
  Popularity: Int
  Jour_de_la_semaine: String
  Annee_post: Int
  Mois: String
  langue_post: String
  Season: String
  Nombre_Hashtags: Int
  Found_Hash: String
  Sentiment_post: String
  Longueur_caracteres_text: Int
  sentiment_comments_POS: Int
  sentiment_comments_NEG: Int
  Timeline_visibility: String
  Instagram_eligibility: String
  Can_reply_privately: Boolean
  is_sponsored: Boolean
  prediction_label: Int
  prediction_score: Float
  comments: [Comment!]!
}

type Query {
  getAllPostsFB: [PostFB!]!
  getPostsFBById(id: Int!): PostFB
}

type Mutation {
  createPostsFB(data: CreatePostFBInput!): PostFB!
  updatePostsFB(id: Int!, data: UpdatePostFBInput!): PostFB!
  deletePostsFB(id: Int!): PostFB!
}
