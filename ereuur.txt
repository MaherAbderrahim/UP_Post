Aucune surcharge ne correspond à cet appel.
  La surcharge 1 sur 2, '(server: ApolloServer<BaseContext>, options?: (StartStandaloneServerOptions<BaseContext> & { listen?: ListenOptions | undefined; }) | undefined): Promise<...>', a généré l'erreur suivante.
    L'argument de type 'ApolloServer<Date>' n'est pas attribuable au paramètre de type 'ApolloServer<BaseContext>'.
      Le type 'BaseContext' n'a pas les propriétés suivantes du type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString et de 37 autres.
  La surcharge 2 sur 2, '(server: ApolloServer<Date>, options: StartStandaloneServerOptions<Date> & Required<Pick<StartStandaloneServerOptions<Date>, "context">> & { ...; }): Promise<...>', a généré l'erreur suivante.
    L'argument de type '{ listen: { port: number; }; }' n'est pas attribuable au paramètre de type 'StartStandaloneServerOptions<Date> & Required<Pick<StartStandaloneServerOptions<Date>, "context">> & { ...; }'.
      La propriété 'context' est absente du type '{ listen: { port: number; }; }' mais obligatoire dans le type 'Required<Pick<StartStandaloneServerOptions<Date>, "context">>'.ts(2769)
index.d.ts(13, 5): 'context' est déclaré ici.


Aucune surcharge ne correspond à cet appel.
  La surcharge 1 sur 2, '(server: ApolloServer<BaseContext>, options?: (StartStandaloneServerOptions<BaseContext> & { listen?: ListenOptions | undefined; }) | undefined): Promise<...>', a généré l'erreur suivante.
    L'argument de type 'ApolloServer<Date>' n'est pas attribuable au paramètre de type 'ApolloServer<BaseContext>'.
      Le type 'BaseContext' n'a pas les propriétés suivantes du type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString et de 37 autres.
  La surcharge 2 sur 2, '(server: ApolloServer<Date>, options: StartStandaloneServerOptions<Date> & Required<Pick<StartStandaloneServerOptions<Date>, "context">> & { ...; }): Promise<...>', a généré l'erreur suivante.
    Impossible d'assigner le type '({ req, res }: Context) => Promise<{ req: any; res: any; }>' au type 'ContextFunction<[StandaloneServerContextFunctionArgument], Date>'.
      Impossible d'assigner le type 'Promise<{ req: any; res: any; }>' au type 'Promise<Date>'.
        Le type '{ req: any; res: any; }' n'a pas les propriétés suivantes du type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString et de 37 autres.ts(2769)
index.d.ts(13, 5): Le type attendu provient de la propriété 'context', qui est déclarée ici sur le type 'StartSt



Aucune surcharge ne correspond à cet appel.
  La surcharge 1 sur 2, '(server: ApolloServer<BaseContext>, options?: (StartStandaloneServerOptions<BaseContext> & { listen?: ListenOptions | undefined; }) | undefined): Promise<...>', a généré l'erreur suivante.
    L'argument de type 'ApolloServer<Date>' n'est pas attribuable au paramètre de type 'ApolloServer<BaseContext>'.
      Le type 'BaseContext' n'a pas les propriétés suivantes du type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString et de 37 autres.
  La surcharge 2 sur 2, '(server: ApolloServer<Date>, options: StartStandaloneServerOptions<Date> & Required<Pick<StartStandaloneServerOptions<Date>, "context">> & { ...; }): Promise<...>', a généré l'erreur suivante.
    Impossible d'assigner le type '({ req, res, }: {    req: NextApiRequest;    res: NextApiResponse<NextApiRequest>;}) => DataSourceContext' au type 'ContextFunction<[StandaloneServerContextFunctionArgument], Date>'.
      Les types des paramètres '__0' et 'integrationContext_0' sont incompatibles.
        Impossible d'assigner le type 'StandaloneServerContextFunctionArgument' au type '{ req: NextApiRequest; res: NextApiResponse<NextApiRequest>; }'.
          Les types de la propriété 'req' sont incompatibles.
            Le type 'IncomingMessage' n'a pas les propriétés suivantes du type 'NextApiRequest': query, cookies, body, envts(2769)
index.d.ts(13, 5): Le type attendu provient de la propriété 'context', qui est déclarée ici sur le type 'StartStandaloneServerOptions<Date> & Required<Pick<StartStandaloneServerOptions<Date>, "context">> & { ...; }'